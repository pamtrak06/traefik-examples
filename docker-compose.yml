version: '3.7'

volumes:
  data-influxdb:
  data-grafana:
  data-chronograf:
  data-telegraf:

networks:
  net-traefik:
    external: true
    driver: bridge
  internal-network:
    internal: true

services:
  traefik:
    image: traefik:2.1
    container_name: "traefik"
    depends_on:
      - influxdb
    command:
      - "--log=true"
      - "--log.level=DEBUG"
      #- "--log.filePath=traefik.log"                  # Writing Logs to a File
      #- "--log.format=json"                           # Writing Logs to a File, in JSON
      - "--api.insecure=true"                          # Traefik will listen on port 8080 by default for API request.
      - "--providers.docker=true"                      # Enabling docker provider
      - "--providers.docker.exposedbydefault=false"    # Do not expose containers unless explicitly told so
      - "--entrypoints.web.address=:80"                # Traefik will listen to incoming request on the port 80 (HTTP)
      - "--metrics.influxdb=true"                      # To enable the InfluxDB
      - "--metrics.influxdb.address=influxdb:8086"     # Address instructs exporter to send metrics to influxdb at this address
      - "--metrics.influxdb.protocol=http"             # InfluxDB's address protocol (udp or http)
      - "--metrics.influxdb.database=traefik"          # InfluxDB database used when protocol is http
      #- "--metrics.influxdb.retentionPolicy=two_hours" # InfluxDB retention policy used when protocol is http
      - "--metrics.influxdb.username=admin"            # InfluxDB username (only with http)
      - "--metrics.influxdb.password=admin"            # InfluxDB password (only with http)
      - "--metrics.influxdb.addEntryPointsLabels=true" # Enable metrics on entry points
      - "--metrics.influxdb.addServicesLabels=true"    # Enable metrics on services
      - "--metrics.influxdb.pushInterval=10s"          # The interval used by the exporter to push metrics to influxdb
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - "net-traefik"
      - "internal-network"

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    environment:
      - "INFLUXDB_DB=traefik"
      - "INFLUXDB_GRAPHITE_ENABLED=true"
      - "INFLUXDB_ADMIN_ENABLED=true"
      - "INFLUXDB_ADMIN_USER=admin"
      - "INFLUXDB_ADMIN_PASSWORD=admin"
      - "INFLUXDB_USER=traefik"
      - "INFLUXDB_USER_PASSWORD=influx"
    volumes:
      - data-influxdb:/var/lib/influxdb
    ports:
      - "8083:8083" # Administrator interface port, if it is enabled
      - "8086:8086" # HTTP API port
      - "2003:2003" # Graphite support, if it is enabled
    networks:
      net-traefik:
      internal-network:
        aliases:
          - influxdb.jhipster-portal
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host(`influxdb.jhipster-portal`)"
      - "traefik.port=8086"
      - "traefik.docker.network=web"

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    depends_on:
      - influxdb
    volumes:
      - data-telegraf:/etc/telegraf/:ro
    networks:
      net-traefik:
      internal-network:
        aliases:
          - telegraf.jhipster-portal
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host(`telegraf.jhipster-portal`)"
      - "traefik.docker.network=web"

  chronograf:
    image: chronograf:latest
    container_name: chronograf
    ports:
      - '8888:8888'
    volumes:
      - data-chronograf:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=admin
      - INFLUXDB_PASSWORD=admin
    networks:
      net-traefik:
      internal-network:
        aliases:
          - chronograf.jhipster-portal
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host(`chronograf.jhipster-portal`)"
      - "traefik.port=8888"
      - "traefik.docker.network=web"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - "GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource"
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=admin"
    depends_on:
      - influxdb
    volumes:
      - data-grafana:/var/lib/grafana
    networks:
      net-traefik:
      internal-network:
        aliases:
          - grafana.jhipster-portal
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host(`grafana.jhipster-portal`)"
      - "traefik.port=3000"
      - "traefik.docker.network=web"

  whoami:
    image: "containous/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.whoami.rule=Host(`simple-service.jhipster-portal`) && PathPrefix(`/simple-service`)"
      - "traefik.http.routers.whoami.rule=Host(`simple-service.jhipster-portal`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      net-traefik:
      internal-network:
        aliases:
          - simple-service.jhipster-portal

  jhipster-registry:  
    image: jhipster/jhipster-registry:v5.0.2
    container_name: "jhipster-registry"
    ports:
      - "8761:8761"
    labels:
      - "traefik.enable=true"                                                           # Explicitly tell Traefik to expose this container
      #- "traefik.http.routers.jhipster-registry.rule=Host(`portal`) && PathPrefix(`/jhipster-registry/`)"  #  The domain the service will respond to
      - "traefik.http.routers.jhipster-registry.rule=Host(`registry.jhipster-portal`)"  #  The domain the service will respond to
      - "traefik.http.routers.jhipster-registry.entrypoints=web"                        # Allow request only from the predefined entry point named "jhipster-registry"
      - "traefik.http.services.jhipster-registry.loadbalancer.server.port=8761"         # Tell Traefik to use the port 8761 to connect to `jhipster-registry`
      - "traefik.http.middlewares.jhipster-registry-redirectregex.redirectregex.regex=/(.*)"
      - "traefik.http.middlewares.jhipster-registry-redirectregex.redirectregex.replacement=http://registry.jhipster-portal/jhipster-registry/$${1}"
    networks:
      net-traefik:
      internal-network:
        aliases:
          - registry.jhipster-portal
